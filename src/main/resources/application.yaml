server:
  port: 8123
  servlet:
    context-path: /api
    session:
      cookie:
        max-age: 2592000 # cookie 30天过期

spring:
  application:
    name: pixelark-backend
  datasource:
    # 数据库连接信息
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/pixel_ark
    username: root
    password: 1234
  servlet:
    multipart:
      # 最大上传文件大小
      max-file-size: 10MB
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
    password: 1234
  session:
    store-type: redis
    timeout: 2592000 # session 30天过期
  # 空间图片分表
  shardingsphere:
    datasource:
      names: pixel_ark
      pixel_ark:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/pixel_ark
        username: root
        password: 123456
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: pixel_ark.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.t0r.pixelarkbackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # 仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除
      logic-not-delete-value: 0 # 逻辑未删除
    enable-sql-runner: true
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.t0r.pixelarkbackend.controller


